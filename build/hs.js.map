{"version":3,"file":"hs.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;ACVA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,EAKoB;AAC1B,CAAC;AACD,yBAAyB;AACzB;AACA;AACA,cAAc,8BAAmB;AACjC;AACA;AACA;AACA;AACA;AACA,WAAW,8BAAmB;AAC9B;AACA,gBAAgB,8BAAmB,wBAAwB,8BAAmB;AAC9E,oDAAoD,wCAAwC;AAC5F;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW,8BAAmB;AAC9B,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW,8BAAmB;AAC9B;AACA,kEAAkE,iBAAiB;AACnF;AACA,2DAA2D,aAAa;AACxE;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,8BAAmB;;AAEnB;AACA,8BAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY,6EAA6E;AACjG,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,yCAAyC,SAAS;AAClD;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;AAKD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;;;;AAKD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;;AAE3B,kBAAkB,qBAAqB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,+BAA+B,mBAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;AAKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,iDAAiD;AACjD,UAAU;AACV,OAAO;AACP;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;;;;;AAMD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,IAAI;AACJ;AACA;AACA,CAAC;;AAED,yDAAyD,iFAAiF,WAAW,qIAAqI,gBAAgB,WAAW,yBAAyB,SAAS,wBAAwB,4BAA4B,cAAc,SAAS,+BAA+B,sBAAsB,WAAW,YAAY,gKAAgK,kDAAkD,SAAS,kBAAkB,kBAAkB,oBAAoB,sBAAsB,8BAA8B,cAAc,uBAAuB,eAAe,YAAY,oBAAoB,MAAM,iEAAiE,UAAU;AAC19B,+DAA+D,gBAAgB,6EAA6E,wDAAwD,6DAA6D,sDAAsD;AACvU,oDAAoD,uDAAuD,uCAAuC,SAAS,uBAAuB;;;;;;AAMlL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,CAAC;;AAED,uEAAuE,iFAAiF,WAAW,sIAAsI,gBAAgB,WAAW,yBAAyB,SAAS,wBAAwB,4BAA4B,cAAc,SAAS,+BAA+B,sBAAsB,WAAW,YAAY,gKAAgK,kDAAkD,SAAS,kBAAkB,kBAAkB,oBAAoB,sBAAsB,8BAA8B,cAAc,uBAAuB,eAAe,YAAY,oBAAoB,MAAM,iEAAiE,UAAU;AACz+B,gEAAgE,gBAAgB,8EAA8E,wDAAwD,6DAA6D,sDAAsD;AACzU,qDAAqD,uDAAuD,uCAAuC,SAAS,uBAAuB;;AAEnL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,wBAAwB,8BAA8B;AACtD;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,CAAC;;AAED,4DAA4D,iFAAiF,WAAW,2HAA2H,gBAAgB,WAAW,yBAAyB,SAAS,wBAAwB,4BAA4B,cAAc,SAAS,+BAA+B,sBAAsB,WAAW,YAAY,gKAAgK,kDAAkD,SAAS,kBAAkB,kBAAkB,oBAAoB,sBAAsB,8BAA8B,cAAc,uBAAuB,eAAe,YAAY,oBAAoB,MAAM,iEAAiE,UAAU;AACn9B,qDAAqD,gBAAgB,mEAAmE,wDAAwD,6DAA6D,sDAAsD;AACnT,0CAA0C,uDAAuD,uCAAuC,SAAS,uBAAuB;AACxK;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,8BAA8B;AAC1D;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,sBAAsB,qBAAqB;AAC3C;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA,6BAA6B,gCAAgC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,gCAAgC;AACjE;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA,wBAAwB,wBAAwB;AAChD,sDAAsD,gDAAgD;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA,CAAC;AACD;;;;;;UCpxBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNe;AACf;AACA;;ACFe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,YAAY,6EAA6E;AACjG,MAAM;AACN;AACA,MAAM;AACN;AAC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","sources":["webpack://hs/webpack/universalModuleDefinition","webpack://hs/./node_modules/ll1-grammar/build/ll1.js","webpack://hs/webpack/bootstrap","webpack://hs/webpack/runtime/define property getters","webpack://hs/webpack/runtime/hasOwnProperty shorthand","webpack://hs/webpack/runtime/make namespace object","webpack://hs/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://hs/./src/Scanner.js","webpack://hs/./src/error.js","webpack://hs/./src/lexer/Lexer.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://hs/./src/lexer/table.js","webpack://hs/./src/lexer/index.js","webpack://hs/./src/parser/astType.js","webpack://hs/./src/parser/constructor.js","webpack://hs/./src/parser/Parser.js","webpack://hs/./src/parser/grammar.js","webpack://hs/./src/parser/index.js","webpack://hs/./src/compiler/Scope.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://hs/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://hs/./src/compiler/package.js","webpack://hs/./src/compiler/Compiler.js","webpack://hs/./src/compiler/index.js","webpack://hs/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hs\"] = factory();\n\telse\n\t\troot[\"hs\"] = factory();\n})(this, () => {\nreturn ","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ll1\"] = factory();\n\telse\n\t\troot[\"ll1\"] = factory();\n})(this, () => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \t// The require scope\n/******/ \tvar __webpack_require__ = {};\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__webpack_require__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __webpack_exports__ = {};\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"$\": () => (/* reexport */ $),\n  \"EMPTY_CHAIN\": () => (/* reexport */ EMPTY_CHAIN),\n  \"clearLeftRecursion\": () => (/* reexport */ clearLeftRecursion),\n  \"combineLikeTerms\": () => (/* reexport */ combineLikeTerms),\n  \"isNotIntersect\": () => (/* reexport */ isNotIntersect),\n  \"makeFirstSet\": () => (/* reexport */ makeFirstSet),\n  \"makeFollowSet\": () => (/* reexport */ makeFollowSet),\n  \"makeLL1\": () => (/* binding */ makeLL1),\n  \"makePredictSet\": () => (/* reexport */ makePredictSet),\n  \"makeSelectSet\": () => (/* reexport */ makeSelectSet),\n  \"makeUnionFirstSet\": () => (/* reexport */ makeUnionFirstSet),\n  \"splitGrammars\": () => (/* reexport */ splitGrammars),\n  \"toGrammars\": () => (/* reexport */ toGrammars)\n});\n\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n;// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n;// CONCATENATED MODULE: ./src/constants.js\nvar EMPTY_CHAIN = null;\nvar OR = '|';\nvar $ = '$';\n;// CONCATENATED MODULE: ./src/utils.js\n\nfunction mergeSet(set1, set2) {\n  return new Set([].concat(_toConsumableArray(set1), _toConsumableArray(set2)));\n}\nfunction isBlank(_char) {\n  return _char === ' ' || _char === '\\t' || _char === '\\n' || _char === '\\r';\n}\n;// CONCATENATED MODULE: ./src/splitGrammars.js\n\n\n\n\n\n/**\n * 生成式必须以空格作为分隔符，以 | 作为或，以 null 作为空串\n * \n * 如: 1、['E -> ( id ) | null']\n *     2、['E -> ( id )', 'E -> null']\n * \n * 无论使用哪种写法最后返回的都会合并成一项，即合并成第一种写法的格式\n */\nfunction splitGrammars(grammars) {\n  var rules = [];\n  var ruleMap = new Map(); // 用于缓存已经创建的产生式，避免重复创建相关的产生式\n\n  for (var i = 0; i < grammars.length; ++i) {\n    var grammar = grammars[i];\n    var _grammar$split = grammar.split('->'),\n      _grammar$split2 = _slicedToArray(_grammar$split, 2),\n      left = _grammar$split2[0],\n      right = _grammar$split2[1];\n    if (!right || !right.trim()) throw new Error('Grammar is missing the right side');\n    var isDefined = true;\n    if (!ruleMap.has(left)) {\n      isDefined = false;\n      ruleMap.set(left, {\n        left: null,\n        right: []\n      });\n    }\n    var grammarRule = ruleMap.get(left);\n    grammarRule.left = left.trim();\n    var fragment = [];\n    var str = '';\n    right += ' ';\n    for (var j = 0; j < right.length; ++j) {\n      var _char = right[j];\n      if (isBlank(_char)) {\n        if (str === 'null') {\n          fragment.push(EMPTY_CHAIN);\n        } else if (str) {\n          fragment.push(str);\n        }\n        str = '';\n      } else if (_char === '|') {\n        grammarRule.right.push(fragment);\n        fragment = [];\n        str = '';\n      } else {\n        str += _char;\n      }\n    }\n    if (fragment.length) grammarRule.right.push(fragment);\n    !isDefined && rules.push(grammarRule);\n  }\n  return rules;\n}\nfunction toGrammars(rules) {\n  var isExpand = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var grammars = [];\n  rules.forEach(function (_ref) {\n    var left = _ref.left,\n      right = _ref.right;\n    if (isExpand) {\n      right.forEach(function (r) {\n        var grammar = '';\n        grammar += \"\".concat(left, \" -> \").concat(r.map(function (chain) {\n          return chain + '';\n        }).join(' '));\n        grammars.push(grammar);\n      });\n    } else {\n      var grammar = '';\n      grammar += \"\".concat(left, \" -> \");\n      right.forEach(function (r) {\n        grammar += r.map(function (chain) {\n          return chain + '';\n        }).join(' ') + \" \".concat(OR, \" \");\n      });\n      grammars.push(grammar.slice(0, -3));\n    }\n  });\n  return grammars;\n}\n\n/**\n * 基于 splitGrammars 方法返回的 rules 进行提取公共因子\n * \n * 提取公共因子产生的新表达式用原表达式加 ' 表示，如有多个公共因子以此类推，如：\n * \n *  E -> + a | + b | * c | * d | y\n * \n * 提取后为\n * \n *  E -> + E' | * E'' | y\n *  E' -> a | b\n *  E'' -> c | d\n */\nfunction combineLikeTerms(rules) {\n  var mergeRight = function mergeRight(right) {\n    return _toConsumableArray(right.map(function (grammar) {\n      return _toConsumableArray(grammar);\n    }));\n  };\n  var rightToString = function rightToString(right) {\n    return right.join(OR);\n  };\n  var newRules = [];\n  var commonSuffix = new Map(); /** 复用已有产生式或提取公共因子后剩余后缀的产生式 */\n  rules.forEach(function (_ref2) {\n    var left = _ref2.left,\n      right = _ref2.right;\n    commonSuffix.set(rightToString(right), left);\n  });\n  rules.forEach(function (_ref3) {\n    var left = _ref3.left,\n      right = _ref3.right;\n    handleRule(left, right, new Map());\n  });\n  function handleRule(left, right) {\n    commonSuffix.set(rightToString(right), left);\n    var repeat = 0;\n    var isInsertRoot = false; // 标记新产生式是否已推入 newRules\n    var grammarRule = {\n      left: left,\n      right: []\n    };\n    if (right.length === 1) {\n      grammarRule.right = mergeRight(right);\n      newRules.push(grammarRule);\n      return;\n    }\n    var prefix;\n    var chain;\n    var skips = []; // 存储已合并的项下标\n    for (var i = 0; i < right.length; ++i) {\n      // 以当前产生式右边为参考系\n      if (skips.includes(i)) continue;\n      skips.push(i);\n      if (i === right.length - 1) {\n        grammarRule.right.push(right[i]);\n        return;\n      }\n      var grammar = right[i];\n      var pos = 0;\n      var commonGrammars = [];\n      commonGrammars.push(grammar);\n      prefix = '';\n      setPrefix: while (pos < grammar.length) {\n        // 当前产生式右边到尽头时，结束遍历\n        chain = grammar[pos];\n        var isEqualChain = false;\n        if (pos === 0) {\n          for (var j = i + 1; j < right.length; ++j) {\n            var curGrammar = right[j];\n            var curChain = curGrammar[pos];\n            if (!curChain) continue;\n            if (curChain === chain) {\n              isEqualChain = true;\n              skips.push(j);\n              commonGrammars.push(right[j]);\n            }\n          }\n        } else {\n          for (var _j = i + 1; _j < right.length; ++_j) {\n            var _curGrammar = right[_j];\n            var _curChain = _curGrammar[pos];\n            if (!_curChain || _curChain !== chain || !skips.includes(_j)) continue;\n            isEqualChain = true;\n          }\n        }\n        if (!isEqualChain) break setPrefix;\n        prefix += chain + OR;\n        pos++;\n      }\n      if (prefix) {\n        var suffixes = commonGrammars.map(function (exp) {\n          var suffix = exp.slice(prefix.slice(0, -1).split(OR).length);\n          if (!suffix.length) return [EMPTY_CHAIN];\n          return suffix;\n        });\n        var newLeft = void 0;\n        if (commonSuffix.has(rightToString(suffixes))) {\n          newLeft = commonSuffix.get(rightToString(suffixes));\n        } else {\n          newLeft = \"\".concat(left).concat(\"'\".repeat(repeat), \"'\");\n        }\n        var newRight = [].concat(_toConsumableArray(prefix.slice(0, -1).split(OR)), [newLeft]);\n        grammarRule.right.push(newRight);\n        if (!isInsertRoot) {\n          newRules.push(grammarRule);\n          repeat++;\n        }\n        ;\n        if (!commonSuffix.has(rightToString(suffixes))) handleRule(newLeft, suffixes);\n      } else {\n        grammarRule.right.push(_toConsumableArray(right[i]));\n        if (!isInsertRoot) {\n          newRules.push(grammarRule);\n        }\n        ;\n      }\n      isInsertRoot = true;\n    }\n  }\n  return newRules;\n}\n\n/**\n * 基于 splitGrammars 方法返回的 rules 进行消除左递归\n * \n * 左递归分为直接左递归和间接左递归，直接左递归调用 clearDirectLeftRecursion 函数进行消除，间接左递归通过代入产生式降级为直接左递归进行消除，\n * 为了与提取公共因子进行区分，消除左递归引入的新产生式用 ` 标记，如：E -> E + T 消除后得 E -> T E`  E` -> + T E` | null\n * \n * A -> A a1 | A a2 | ... | A an | b1 | b2 | ... | bm\n * \n * ---->\n * \n *  A -> b1A` | b2A` | ... | bmA`\n *  A' -> a1A` | a2A` | ... | anA` | null\n * \n */\nfunction clearLeftRecursion(rules) {\n  var newRules = [];\n  rules.forEach(function (rule) {\n    newRules.push.apply(newRules, _toConsumableArray(clearDirectLeftRecursion(rule)));\n  });\n  function clearDirectLeftRecursion(_ref4 /** rule */) {\n    var left = _ref4.left,\n      right = _ref4.right;\n    var rules = [];\n    var newLeft = \"\".concat(left, \"`\");\n    var prefixGrammars = [];\n    var grammars = [];\n    var isEmpty = false;\n    right.forEach(function (grammar) {\n      if (grammar[0] === left) {\n        grammar.shift();\n        grammar.push(newLeft);\n        prefixGrammars.push(grammar);\n      } else if (grammar[0] === EMPTY_CHAIN) {\n        isEmpty = true;\n      } else {\n        grammar.push(newLeft);\n        grammars.push(grammar);\n      }\n    });\n    if (isEmpty) {\n      grammars.push([newLeft]);\n    }\n    rules.push({\n      left: left,\n      right: [].concat(grammars)\n    }, {\n      left: newLeft,\n      right: [].concat(prefixGrammars, [[EMPTY_CHAIN]])\n    });\n    return rules;\n  }\n  return newRules;\n}\n;// CONCATENATED MODULE: ./src/makeFirstSet.js\n\n\n\n\n/**\n  1、依次遍历所有产生式，把串首终结符加入其 FIRST 集中。\n  2、如果最左串是非终结符，则把该非终结符的 FIRST 集推入到当前产生式中，如果该非终结符包含空，那么把该非终结符的 FIRST 集 - 空推入到当前产生式中，同时把该非终结符的下一个非终结符的 FIRST 集推入到当前产生式中，重复第二步直至遇到没有包含空的非终结符为止。\n  3、重新遍历所有产生式，重复执行步骤 1、2，直至所有产生式均无变化。\n */\nfunction makeFirstSet(rules, terminalSymbols) {\n  var isTerminal = function isTerminal(chain) {\n    return terminalSymbols.includes(chain) || chain === EMPTY_CHAIN;\n  };\n  var firstSet = {};\n  rules.forEach(function (_ref) {\n    var left = _ref.left;\n    return firstSet[left] = [];\n  });\n  var isSetChanged;\n  do {\n    isSetChanged = false;\n    rules.forEach(function (_ref2) {\n      var left = _ref2.left,\n        right = _ref2.right;\n      var sets = new Set(firstSet[left]);\n      var prevLength = sets.size;\n\n      // 处理诸如 E -> A | B 的情况需要遍历\n      right.forEach(function (grammar) {\n        var first = 0;\n        var chain = grammar[first];\n        while (((_chain = chain) === null || _chain === void 0 ? void 0 : _chain[0]) === $) {\n          var _chain;\n          chain = grammar[++first];\n        }\n        if (isTerminal(chain)) sets.add(chain);else if (firstSet[chain].includes(EMPTY_CHAIN)) {\n          do {\n            var _firstSet$chain;\n            var nextSet = new Set(firstSet[chain]);\n            nextSet[\"delete\"](EMPTY_CHAIN);\n            sets = mergeSet(sets, nextSet);\n            first += 1;\n            chain = grammar[first];\n            while (((_chain2 = chain) === null || _chain2 === void 0 ? void 0 : _chain2[0]) === $) {\n              var _chain2;\n              chain = grammar[++first];\n            }\n          } while ((_firstSet$chain = firstSet[chain]) !== null && _firstSet$chain !== void 0 && _firstSet$chain.includes(EMPTY_CHAIN));\n          if (isTerminal(chain)) sets.add(chain);else if (chain) sets = mergeSet(sets, firstSet[chain]);\n        } else sets = mergeSet(sets, firstSet[chain]);\n      });\n      firstSet[left] = _toConsumableArray(sets);\n      if (prevLength !== sets.size) isSetChanged = true;\n    });\n  } while (isSetChanged);\n  return firstSet;\n}\nfunction makeUnionFirstSet(chainSet, firstSet, terminalSymbols) {\n  var isTerminal = function isTerminal(chain) {\n    return terminalSymbols.includes(chain) || chain === EMPTY_CHAIN;\n  };\n  var unionFirstSet = [];\n  chainSet.some(function (chain) {\n    if (chain[0] === $) return false;\n    if (isTerminal(chain)) {\n      unionFirstSet.push(chain);\n    } else if (!firstSet[chain].includes(EMPTY_CHAIN)) {\n      unionFirstSet.push.apply(unionFirstSet, _toConsumableArray(firstSet[chain]));\n    } else {\n      return false;\n    }\n    return true;\n  });\n  return unionFirstSet;\n}\n;// CONCATENATED MODULE: ./src/makeFollowSet.js\n\n\n\n\n\n/**\n    设有式子 S -> (L) | aL | LC，规则如下：\n  1、如果 L 的右边是终结符，那么把这个终结符加到 L 的 FOLLOW 集中。\n  2、如果 L 的右边是非终结符，那么把这个非终结符的 FIRST 集 - 空 加到 L 的 FOLLOW 集中。\n  3、如果 L 处在末尾，那么把 -> 左边符号的 FOLLOW 集 加入到 L 的 FOLLOW 集中。\n  4、当 L 的式子包含空时，对 L 的左边非终结符采用 1、2、3 规则，依次类推。\n\n  推导过程\n\n  1、在第一个产生式加入 $ 作为终止符。\n  2、依次遍历产生式，依序遍历产生式右边，对每个串运用规则。\n  3、重复执行步骤 2，直至所有产生式均无变化。\n */\nfunction makeFollowSet(rules, terminalSymbols) {\n  var firstSet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : makeFirstSet(rules, terminalSymbols);\n  var isTerminal = function isTerminal(chain) {\n    return terminalSymbols.includes(chain) || chain === EMPTY_CHAIN;\n  };\n  var followSet = {};\n  rules.forEach(function (_ref) {\n    var left = _ref.left;\n    return followSet[left] = [];\n  });\n  followSet[rules[0].left].push($);\n  var emptySet = new Set();\n  for (var tag in firstSet) firstSet[tag].includes(EMPTY_CHAIN) && emptySet.add(tag);\n  var isSetChanged;\n  do {\n    isSetChanged = false;\n    rules.forEach(function (_ref2) {\n      var left = _ref2.left,\n        right = _ref2.right;\n      right.forEach(function (grammar) {\n        for (var i = grammar.length - 1; i >= 0; --i) {\n          var chain = grammar[i];\n          if (isTerminal(chain) || chain[0] === $) continue;\n          var prevLength = followSet[chain].length;\n          if (i === grammar.length - 1) {\n            followSet[chain] = _toConsumableArray(mergeSet(followSet[chain], followSet[left]));\n          } else {\n            var j = i + 1;\n            var nextChain = grammar[j];\n            while (j < grammar.length && nextChain[0] === $) {\n              nextChain = grammar[++j];\n            }\n            if (isTerminal(nextChain)) {\n              followSet[chain] = _toConsumableArray(mergeSet(followSet[chain], [nextChain]));\n            } else {\n              var nextSet = new Set(firstSet[nextChain]);\n              nextSet[\"delete\"](EMPTY_CHAIN);\n              followSet[chain] = _toConsumableArray(mergeSet(followSet[chain], nextSet));\n              while (j < grammar.length && (emptySet.has(nextChain) || nextChain[0] === $)) nextChain = grammar[++j];\n              if (j === grammar.length) followSet[chain] = _toConsumableArray(mergeSet(followSet[chain], followSet[left]));\n            }\n          }\n          if (followSet[chain].length !== prevLength) isSetChanged = true;\n        }\n      });\n    });\n  } while (isSetChanged);\n  return followSet;\n}\n;// CONCATENATED MODULE: ./src/makeSelectSet.js\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = makeSelectSet_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction makeSelectSet_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return makeSelectSet_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return makeSelectSet_arrayLikeToArray(o, minLen); }\nfunction makeSelectSet_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n\n\n\n\n/**\n  对于形似 A -> ab 的产生式，其 SELECT 集为 FIRST(ab)。\n  对于形似 A -> null 的产生式，其 SELECT 集为 FOLLOW(A)。\n\n  推导过程\n\n    1、对每个产生式进行拆分，如：\n    E -> id | null 拆分成 E -> id，E -> null。\n    2、运用规则求出每个产生式的 SELECT 集。\n */\nfunction makeSelectSet(rules, terminalSymbols) {\n  var firstSet = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : makeFirstSet(rules, terminalSymbols);\n  var followSet = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : makeFollowSet(rules, terminalSymbols);\n  var selectSet = new Map();\n  rules.forEach(function (_ref) {\n    var left = _ref.left,\n      right = _ref.right;\n    right.forEach(function (chainSet) {\n      var pos = 0;\n      var chain = chainSet[pos];\n      var newRule = {\n        left: left,\n        right: chainSet\n      };\n      while (pos < chainSet.length && chain && chain[0] === $) {\n        chain = chainSet[++pos];\n      }\n      if (chain === EMPTY_CHAIN) {\n        selectSet.set(newRule, followSet[left]);\n      } else {\n        selectSet.set(newRule, makeUnionFirstSet(chainSet, firstSet, terminalSymbols));\n      }\n    });\n  });\n  return selectSet;\n}\nfunction isNotIntersect(selectSet) {\n  var map = new Map();\n  var _iterator = _createForOfIteratorHelper(selectSet),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n        left = _step$value[0].left,\n        sets = _step$value[1];\n      if (map.has(left)) {\n        var prevSets = map.get(left);\n        var newSets = mergeSet(prevSets, sets);\n        if (newSets.size !== prevSets.size + sets.length) {\n          return false;\n        }\n        map.set(left, newSets);\n      } else {\n        map.set(left, new Set(sets));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return true;\n}\n;// CONCATENATED MODULE: ./src/makePredictSet.js\n\nfunction makePredictSet_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = makePredictSet_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction makePredictSet_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return makePredictSet_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return makePredictSet_arrayLikeToArray(o, minLen); }\nfunction makePredictSet_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\nfunction makePredictSet(selectSet) {\n  if (!isNotIntersect(selectSet)) throw new Error('Select set does not satisfy the LL(1) grammar');\n  var predictSet = new Map();\n  var _iterator = makePredictSet_createForOfIteratorHelper(selectSet),\n    _step;\n  try {\n    var _loop = function _loop() {\n      var _step$value = _slicedToArray(_step.value, 2),\n        _step$value$ = _step$value[0],\n        left = _step$value$.left,\n        right = _step$value$.right,\n        sets = _step$value[1];\n      sets.forEach(function (chain) {\n        if (!predictSet.has(chain)) predictSet.set(chain, new Map());\n        var chainMap = predictSet.get(chain);\n        chainMap.set(left, right);\n      });\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return predictSet;\n}\n;// CONCATENATED MODULE: ./src/index.js\n\nfunction src_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = src_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction src_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return src_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return src_arrayLikeToArray(o, minLen); }\nfunction src_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n// run npx babel-node index.js\n\n\n\n\n\n\nfunction makeLL1(grammars, terminalSymbols) {\n  var rules = splitGrammars(grammars);\n  var firstSet = makeFirstSet(rules, terminalSymbols);\n  var followSet = makeFollowSet(rules, terminalSymbols, firstSet);\n  var selectSet = makeSelectSet(rules, terminalSymbols, firstSet, followSet);\n  var predictSet = makePredictSet(selectSet);\n  return {\n    startSymbol: rules[0].left,\n    firstSet: firstSet,\n    followSet: followSet,\n    selectSet: selectSet,\n    predictSet: predictSet,\n    print: function print() {\n      var leftSet = [];\n      var chainSet = [];\n      var indent = 2;\n      var maxLength = indent;\n      var _iterator = src_createForOfIteratorHelper(predictSet),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 1),\n            chain = _step$value[0];\n          chainSet.push(chain);\n          maxLength = Math.max(maxLength, chain.length + indent);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      for (var left in firstSet) {\n        leftSet.push(left);\n        maxLength = Math.max(maxLength, left.length + indent);\n      }\n      var result = new Array(leftSet.length + 1).fill([]).map(function () {\n        return new Array(chainSet.length + 1).fill('');\n      });\n      for (var i = 0; i < chainSet.length; ++i) {\n        result[0][i + 1] = chainSet[i];\n      }\n      for (var _i = 0; _i < leftSet.length; ++_i) {\n        result[_i + 1][0] = leftSet[_i];\n      }\n      var _iterator2 = src_createForOfIteratorHelper(predictSet),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _step2$value = _slicedToArray(_step2.value, 2),\n            _chain = _step2$value[0],\n            ruleMap = _step2$value[1];\n          var col = result[0].indexOf(_chain);\n          var row = void 0;\n          var _iterator3 = src_createForOfIteratorHelper(ruleMap),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var _step3$value = _slicedToArray(_step3.value, 2),\n                _left = _step3$value[0],\n                right = _step3$value[1];\n              for (var _i3 = 0; _i3 < leftSet.length; ++_i3) {\n                if (result[_i3 + 1][0] === _left) {\n                  row = _i3 + 1;\n                  break;\n                }\n              }\n              result[row][col] = \"-> \".concat(right.map(function (item) {\n                return item + '';\n              }).join(' '));\n              maxLength = Math.max(maxLength, result[row][col].length + indent);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var colLength = maxLength + indent;\n      var logStr = '';\n      var splitStr = '\\n' + ('|' + '-'.repeat(colLength)).repeat(chainSet.length + 1) + '|\\n';\n      for (var _i2 = 0; _i2 < result.length; ++_i2) {\n        logStr += splitStr + '|';\n        for (var j = 0; j < result[_i2].length; ++j) {\n          var term = _i2 === 0 || j === 0 ? \" \\x1b[33;1m \" + result[_i2][j] + \" \\x1b[0m \" : \" \\x1b[32;1m \" + result[_i2][j] + \" \\x1b[0m \";\n          logStr += term + ' '.repeat(maxLength + 13 - term.length) + '|';\n        }\n      }\n      logStr += splitStr;\n      console.log(logStr);\n    }\n  };\n}\n\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=ll1.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default class Scanner {\r\n  constructor(stream) {\r\n    this.stream = stream\r\n    this.pos = 0\r\n  }\r\n\r\n  isEnd() {\r\n    return this.pos >= this.stream.length\r\n  }\r\n\r\n  peek() {\r\n    if(!this.isEnd()) return this.stream[this.pos]\r\n  }\r\n\r\n  read() {\r\n    if(!this.isEnd()) return this.stream[this.pos++]\r\n  }\r\n\r\n  back() {\r\n    if(!this.isEnd()) return this.stream[--this.pos]\r\n  }\r\n}\r\n","\r\nexport default function error(Error, err, source, loc) {\r\n  source = `\\x1b[33;2m${source}\\x1b[0m`\r\n  const space = ' '.repeat(source.length)\r\n  const errLength = loc.end - loc.start + 1\r\n  const posSymbol = space.slice(0, loc.linePos - 1) + '^'.repeat(errLength) + space.slice(loc.linePos + errLength - 1)\r\n\r\n  throw new Error(err + `\\n\\t${source}\\tat: ${loc.line}:${loc.linePos}\\n\\t${posSymbol}`)\r\n}\r\n","import Scanner from \"../Scanner\"\r\nimport error from '../error'\r\n\r\nexport const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\nexport const number = '0123456789'\r\nexport const symbol = `\\~\\`\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\-\\+\\=\\{\\[\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\<\\.\\>\\/\\?`\r\nexport const blank = ' \\n\\t\\r'\r\nexport const space = ' \\t'\r\nexport const line = '\\n\\r'\r\n\r\n// 起始态\r\nexport const Initialize = '<initialize>'\r\n// 兜底命中\r\nexport const Else = '<else>'\r\n\r\nclass Token {\r\n  /**\r\n   * location: {\r\n   *  linePos,\r\n   *  line,\r\n   *  start,\r\n   *  end\r\n   * } \r\n   */\r\n  constructor(source, type, value, location) {\r\n    this.source = source\r\n    this.type = type\r\n    this.value = value\r\n    this.location = location\r\n  }\r\n}\r\n\r\nexport default class Lexel {\r\n  constructor(table) {\r\n    /**\r\n     * table {\r\n     *  [state]: states\r\n     * }\r\n     * \r\n     * states {\r\n     *  [matcher]: { state?, isTerminate?, error? }\r\n     * }\r\n     */\r\n    this.table = table\r\n  }\r\n\r\n  tokenize(sentence) {\r\n    const lineSentence = sentence.split(/[\\n\\r]/g)\r\n    const tokens = []\r\n\r\n    const table = this.table\r\n    const scanner = new Scanner(sentence + ' ')\r\n    let char = ''\r\n    let fragment = ''\r\n    let state = Initialize\r\n    let initPos = scanner.pos\r\n    let curLine = 1\r\n    let curLinePos = 1\r\n    let startLine = curLine\r\n    let startLinePos = curLinePos\r\n    while (char = scanner.read()) {\r\n      // 新行\r\n      if (line.indexOf(char) !== -1) {\r\n        curLine++\r\n        curLinePos = 0\r\n      }\r\n\r\n      const states = table[state]\r\n\r\n      let isMatch = false\r\n      for (const matcher in states) {\r\n        if (matcher.indexOf(char) !== -1 || matcher === Else) {\r\n          isMatch = true\r\n          const match = states[matcher]\r\n          if (match.error) {\r\n            error(SyntaxError, match.error(char), lineSentence[curLine - 1], {\r\n              linePos: startLinePos, line: curLine, start: initPos, end: scanner.pos - 1\r\n            })\r\n          }\r\n\r\n          if (state === Initialize) {\r\n            startLine = curLine\r\n            startLinePos = curLinePos\r\n          }\r\n\r\n          state = match.state\r\n\r\n          if (state === Initialize) {\r\n            initPos = scanner.pos\r\n            fragment = ''\r\n          } else if (match.isTerminate) { // 添加 token\r\n            if (line.indexOf(char) !== -1) {\r\n              curLine--\r\n            }\r\n            curLinePos--\r\n\r\n            const source = lineSentence[curLine - 1]\r\n            const type = state\r\n            const value = fragment\r\n            const location = {}\r\n            location.linePos = startLinePos\r\n            location.line = startLine\r\n            location.start = initPos\r\n            location.end = scanner.pos - 2\r\n\r\n            tokens.push(\r\n              new Token(source, type, value, location)\r\n            )\r\n\r\n            fragment = ''\r\n            state = Initialize\r\n\r\n            scanner.back()\r\n\r\n            initPos = scanner.pos\r\n          } else {\r\n            fragment += char\r\n          }\r\n\r\n          if (!table[state]) {\r\n            error(SyntaxError, `Unexpected token '${char}'`, lineSentence[curLine - 1], {\r\n              linePos: startLinePos, line: curLine, start: initPos, end: scanner.pos - 1\r\n            })\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        error(SyntaxError, `Invalid or unexpected token`, lineSentence[curLine - 1], {\r\n          linePos: startLinePos, line: curLine, start: initPos, end: scanner.pos - 1\r\n        })\r\n      }\r\n\r\n      curLinePos++\r\n    }\r\n\r\n    if (state !== Initialize) {\r\n      error(SyntaxError, 'Status not ended', lineSentence[curLine - 1], {\r\n        linePos: startLinePos, line: curLine, start: initPos, end: scanner.pos - 1\r\n      })\r\n    }\r\n    tokens.push(\r\n      new Token(tokens[tokens.length - 1]?.source, '$', tokens[tokens.length - 1]?.value, tokens[tokens.length - 1]?.location)\r\n    )\r\n\r\n    return tokens\r\n  }\r\n\r\n  toString(tokens) {\r\n    let tokenString = ''\r\n\r\n    tokens.forEach(({ type }) => {\r\n      tokenString += type + ' '\r\n    })\r\n\r\n    return tokenString.slice(0, -1)\r\n  }\r\n}\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import {\r\n  chars, number, blank, Initialize, Else\r\n} from './Lexer'\r\n\r\nexport default {\r\n  [Initialize]: {\r\n    ['d']: { state: 'def1' },\r\n    ['r']: { state: 'readOrRetrun1' },\r\n    ['f']: { state: 'funcFor' },\r\n    ['b']: { state: 'beginBreak' },\r\n    ['e']: { state: 'endElifElse1' },\r\n    ['i']: { state: 'if1' },\r\n    ['o']: { state: 'or1' },\r\n    ['a']: { state: 'and1' },\r\n    ['n']: { state: 'notNull1' },\r\n    ['p']: { state: 'pass1' },\r\n    ['w']: { state: 'while1' },\r\n    ['c']: { state: 'continue1' },\r\n    ['T']: { state: 'True1' },\r\n    ['F']: { state: 'False1' },\r\n    [chars]: { state: 'chars' },\r\n    ['0']: { state: 'zero' },\r\n    [number]: { state: 'number' },\r\n    ['\"']: { state: 'quotation' },\r\n    ['(']: { state: 'leftBracket' },\r\n    [')']: { state: 'rightBracket' },\r\n    ['+']: { state: 'plus' },\r\n    ['-']: { state: 'minus' },\r\n    ['*']: { state: 'multiply' },\r\n    ['/']: { state: 'divide' },\r\n    ['%']: { state: 'surplus' },\r\n    ['=']: { state: 'equalWrite' },\r\n    [';']: { state: 'semicolon' },\r\n    ['#']: { state: 'pound' },\r\n    [':']: { state: 'colon' },\r\n    [',']: { state: 'comma' },\r\n    ['>']: { state: 'greaterWrite' },\r\n    ['<']: { state: 'lessWrite' },\r\n    ['{']: { state: 'leftBrace' },\r\n    ['}']: { state: 'rightBrace' },\r\n    [blank]: { state: Initialize }\r\n  },\r\n  ['chars']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['zero']: {\r\n    [number]: { error: () => 'Numbers cannot contain leading zeros' },\r\n    ['.']: { state: 'decimals' },\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['number']: {\r\n    [number]: { state: 'number' },\r\n    ['.']: { state: 'decimals' },\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['decimals']: {\r\n    [number]: { state: 'decimals' },\r\n    ['.']: { error: (char) => `Unexpected token '${char}'` },\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['def1']: {\r\n    ['e']: { state: 'def2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['def2']: {\r\n    ['f']: { state: 'def3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['def3']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'defined', isTerminate: true }\r\n  },\r\n  ['readOrRetrun1']: {\r\n    ['e']: { state: 'readOrRetrun2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['readOrRetrun2']: {\r\n    ['a']: { state: 'read3' },\r\n    ['t']: { state: 'return3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['read3']: {\r\n    ['d']: { state: 'read4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['read4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'defined', isTerminate: true }\r\n  },\r\n  ['return3']: {\r\n    ['u']: { state: 'return4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['return4']: {\r\n    ['r']: { state: 'return5' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['return5']: {\r\n    ['n']: { state: 'return6' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['return6']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'return', isTerminate: true }\r\n  },\r\n  ['funcFor']: {\r\n    ['u']: { state: 'func2' },\r\n    ['o']: { state: 'for2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['func2']: {\r\n    ['n']: { state: 'func3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['func3']: {\r\n    ['c']: { state: 'func4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['func4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'function', isTerminate: true }\r\n  },\r\n  ['beginBreak']: {\r\n    ['e']: { state: 'begin2' },\r\n    ['r']: { state: 'break2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['begin2']: {\r\n    ['g']: { state: 'begin3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['begin3']: {\r\n    ['i']: { state: 'begin4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['begin4']: {\r\n    ['n']: { state: 'begin5' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['begin5']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'begin', isTerminate: true }\r\n  },\r\n  ['break2']: {\r\n    ['e']: { state: 'break3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['break3']: {\r\n    ['a']: { state: 'break4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['break4']: {\r\n    ['k']: { state: 'break5' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['break5']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'break', isTerminate: true }\r\n  },\r\n  ['continue1']: {\r\n    ['o']: { state: 'continue2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue2']: {\r\n    ['n']: { state: 'continue3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue3']: {\r\n    ['t']: { state: 'continue4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue4']: {\r\n    ['i']: { state: 'continue5' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue5']: {\r\n    ['n']: { state: 'continue6' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue6']: {\r\n    ['u']: { state: 'continue7' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue7']: {\r\n    ['e']: { state: 'continue8' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['continue8']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'continue', isTerminate: true }\r\n  },\r\n  ['endElifElse1']: {\r\n    ['n']: { state: 'end2' },\r\n    ['l']: { state: 'elifElse2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['end2']: {\r\n    ['d']: { state: 'end3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['end3']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'end', isTerminate: true }\r\n  },\r\n  ['elifElse2']: {\r\n    ['i']: { state: 'elif3' },\r\n    ['s']: { state: 'else3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['elif3']: {\r\n    ['f']: { state: 'elif4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['elif4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'elif', isTerminate: true }\r\n  },\r\n  ['else3']: {\r\n    ['e']: { state: 'else4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['else4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'else', isTerminate: true }\r\n  },\r\n  ['if1']: {\r\n    ['f']: { state: 'if2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['if2']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'if', isTerminate: true }\r\n  },\r\n  ['or1']: {\r\n    ['r']: { state: 'or2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['or2']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'or', isTerminate: true }\r\n  },\r\n  ['and1']: {\r\n    ['n']: { state: 'and2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['and2']: {\r\n    ['d']: { state: 'and3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['and3']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'and', isTerminate: true }\r\n  },\r\n  ['notNull1']: {\r\n    ['o']: { state: 'not2' },\r\n    ['u']: { state: 'null2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['not2']: {\r\n    ['t']: { state: 'not3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['not3']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'not', isTerminate: true }\r\n  },\r\n  ['null2']: {\r\n    ['l']: { state: 'null3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['null3']: {\r\n    ['l']: { state: 'null4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['null4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['pass1']: {\r\n    ['a']: { state: 'pass2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['pass2']: {\r\n    ['s']: { state: 'pass3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['pass3']: {\r\n    ['s']: { state: 'pass4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['pass4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'pass', isTerminate: true }\r\n  },\r\n  ['for2']: {\r\n    ['r']: { state: 'for3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['for3']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'for', isTerminate: true }\r\n  },\r\n  ['True1']: {\r\n    ['r']: { state: 'True2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['True2']: {\r\n    ['u']: { state: 'True3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['True3']: {\r\n    ['e']: { state: 'True4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['True4']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['False1']: {\r\n    ['a']: { state: 'False2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['False2']: {\r\n    ['l']: { state: 'False3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['False3']: {\r\n    ['s']: { state: 'False4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['False4']: {\r\n    ['e']: { state: 'False5' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['False5']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['while1']: {\r\n    ['h']: { state: 'while2' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['while2']: {\r\n    ['i']: { state: 'while3' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['while3']: {\r\n    ['l']: { state: 'while4' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['while4']: {\r\n    ['e']: { state: 'while5' },\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'identifier', isTerminate: true }\r\n  },\r\n  ['while5']: {\r\n    [chars + number]: { state: 'chars' },\r\n    [Else]: { state: 'while', isTerminate: true }\r\n  },\r\n  ['quotation']: {\r\n    '\"': { state: 'string' },\r\n    [Else]: { state: 'quotation' }\r\n  },\r\n  ['string']: {\r\n    [Else]: { state: 'literal', isTerminate: true }\r\n  },\r\n  ['leftBracket']: {\r\n    [Else]: { state: 'leftBracket', isTerminate: true }\r\n  },\r\n  ['rightBracket']: {\r\n    [Else]: { state: 'rightBracket', isTerminate: true }\r\n  },\r\n  ['plus']: {\r\n    [Else]: { state: 'plus', isTerminate: true }\r\n  },\r\n  ['minus']: {\r\n    [Else]: { state: 'minus', isTerminate: true }\r\n  },\r\n  ['multiply']: {\r\n    [Else]: { state: 'multiply', isTerminate: true }\r\n  },\r\n  ['divide']: {\r\n    [Else]: { state: 'divide', isTerminate: true }\r\n  },\r\n  ['surplus']: {\r\n    [Else]: { state: 'surplus', isTerminate: true }\r\n  },\r\n  ['equalWrite']: {\r\n    '=': { state: 'congruent' },\r\n    [Else]: { state: 'equal', isTerminate: true }\r\n  },\r\n  ['congruent']: {\r\n    [Else]: { state: 'congruent', isTerminate: true }\r\n  },\r\n  ['semicolon']: {\r\n    [Else]: { state: 'semicolon', isTerminate: true }\r\n  },\r\n  ['colon']: {\r\n    [Else]: { state: 'colon', isTerminate: true }\r\n  },\r\n  ['comma']: {\r\n    [Else]: { state: 'comma', isTerminate: true }\r\n  },\r\n  ['leftBrace']: {\r\n    [Else]: { state: 'leftBrace', isTerminate: true }\r\n  },\r\n  ['rightBrace']: {\r\n    [Else]: { state: 'rightBrace', isTerminate: true }\r\n  },\r\n  ['pound']: {\r\n    '>': { state: 'comment' }\r\n  },\r\n  ['comment']: {\r\n    '<': { state: 'commentReady' },\r\n    [Else]: { state: 'comment' }\r\n  },\r\n  ['commentReady']: {\r\n    '#': { state: Initialize },\r\n    [Else]: { state: 'comment' }\r\n  },\r\n  ['greaterWrite']: {\r\n    '=': { state: 'greaterEqualWrite' },\r\n    [Else]: { state: 'greater', isTerminate: true }\r\n  },\r\n  ['greaterEqualWrite']: {\r\n    [Else]: { state: 'greaterEqual', isTerminate: true }\r\n  },\r\n  ['lessWrite']: {\r\n    '=': { state: 'lessEqualWrite' },\r\n    [Else]: { state: 'less', isTerminate: true }\r\n  },\r\n  ['lessEqualWrite']: {\r\n    [Else]: { state: 'lessEqual', isTerminate: true }\r\n  },\r\n}\r\n","import Lexel from './Lexer'\r\nimport tabel from './table'\r\n\r\nexport default new Lexel(tabel)\r\n","export const AstType = {\r\n  'Program': 'Program',\r\n  'VariableDeclaration': 'VariableDeclaration',\r\n  'VariableDeclarator': 'VariableDeclarator',\r\n  'FunctionDeclaration': 'FunctionDeclaration',\r\n  'Identifier': 'Identifier',\r\n  'Literal': 'Literal',\r\n  // Expression\r\n  'EqualExpression': 'EqualExpression',\r\n  'PlusExpression': 'PlusExpression',\r\n  'MinusExpression': 'MinusExpression',\r\n  'MultiplyExpression': 'MultiplyExpression',\r\n  'DivideExpression': 'DivideExpression',\r\n  'SurplusExpression': 'SurplusExpression',\r\n  'CongruentExpression': 'CongruentExpression',\r\n  'NotExpression': 'NotExpression',\r\n  'AndExpression': 'AndExpression',\r\n  'OrExpression': 'OrExpression',\r\n  'GreaterExpression': 'GreaterExpression',\r\n  'GreaterEqualExpression': 'GreaterEqualExpression',\r\n  'LessExpression': 'LessExpression',\r\n  'LessEqualExpression': 'LessEqualExpression',\r\n  'LogicalExpression': 'LogicalExpression',\r\n  'UnaryExpression': 'UnaryExpression',\r\n  'BinaryExpression': 'BinaryExpression',\r\n  'AssignmentExpression': 'AssignmentExpression',\r\n  \"CallExpression\": \"CallExpression\",\r\n  \"ArrayExpression\": 'ArrayExpression',\r\n  'MemberExpression': 'MemberExpression',\r\n  // Statement\r\n  'ExpressionStatement': 'ExpressionStatement',\r\n  \"BlockStatement\": \"BlockStatement\",\r\n  \"ReturnStatement\": \"ReturnStatement\",\r\n  'IfStatement': 'IfStatement',\r\n  \"BreakStatement\": 'BreakStatement',\r\n  'ContinueStatement': 'ContinueStatement',\r\n  'WhileStatement': 'WhileStatement',\r\n  'ForStatement': 'ForStatement'\r\n};\r\n","import { AstType } from './astType'\r\n\r\nexport function createRoot(body, location) {\r\n  return {\r\n    type: AstType['Program'],\r\n    location,\r\n    body\r\n  }\r\n}\r\n\r\nexport function _defined({ source, value, location }) {\r\n  return {\r\n    type: AstType['VariableDeclaration'],\r\n    source,\r\n    location,\r\n    declarations: [],\r\n    kind: value\r\n  }\r\n}\r\n\r\nexport function _identifier({ source, value, location }) {\r\n  return {\r\n    type: AstType['Identifier'],\r\n    source,\r\n    location,\r\n    name: value\r\n  }\r\n}\r\n\r\nexport function _literal({ source, value, location }) {\r\n  let result\r\n  if(value === 'True') {\r\n    result = true\r\n  } else if(value === 'False') {\r\n    result = false\r\n  } else if(value === 'null') {\r\n    result = null\r\n  } else if(value[0] == '\"' && value[value.length - 1] === '\"') {\r\n    result = value.slice(1, -1)\r\n  } else {\r\n    result = Number(value)\r\n  }\r\n  return {\r\n    type: AstType['Literal'],\r\n    source,\r\n    location,\r\n    value: result,\r\n    raw: value\r\n  }\r\n}\r\n\r\nexport function $createVariableDeclaratorInit(astList) {\r\n  const startIndex = astList.length - 3\r\n  const identifier = astList[startIndex]\r\n  const init = astList[startIndex + 2]\r\n\r\n  const variableDeclarator = {\r\n    type: AstType['VariableDeclarator'],\r\n    ...mergeTokenInfo(identifier, init),\r\n    id: identifier,\r\n    init\r\n  }\r\n\r\n  astList.splice(startIndex, 3, variableDeclarator)\r\n  astList[astList.length - 2].declarations.push(astList.pop())\r\n}\r\n\r\nexport function $createVariableDeclarator(astList) {\r\n  const startIndex = astList.length - 1\r\n  const identifier = astList[startIndex]\r\n\r\n  const variableDeclarator = {\r\n    type: AstType['VariableDeclarator'],\r\n    ...mergeTokenInfo(identifier),\r\n    id: identifier,\r\n    init: null\r\n  }\r\n\r\n  astList.splice(startIndex, 1, variableDeclarator)\r\n  astList[astList.length - 2].declarations.push(astList.pop())\r\n}\r\n\r\nexport function _begin({ source, location }) {\r\n  return {\r\n    type: AstType['BlockStatement'],\r\n    source,\r\n    location,\r\n    body: []\r\n  }\r\n}\r\nexport const _pass = _begin\r\n\r\nexport function $appendBlock(astList, blocks) {\r\n  const startIndex = astList.length - 1\r\n  const block = astList[startIndex]\r\n  blocks.push(block.body)\r\n}\r\n\r\nexport function $popBlock(_, blocks) {\r\n  blocks.pop()\r\n}\r\n\r\nexport function _return({ source, location }) {\r\n  return {\r\n    type: AstType['ReturnStatement'],\r\n    source,\r\n    location,\r\n    argument: null\r\n  }\r\n}\r\n\r\nexport function _break({ source, location }) {\r\n  return {\r\n    type: AstType['BreakStatement'],\r\n    source,\r\n    location,\r\n    argument: null\r\n  }\r\n}\r\n\r\nexport function _continue({ source, location }) {\r\n  return {\r\n    type: AstType['ContinueStatement'],\r\n    source,\r\n    location,\r\n    argument: null\r\n  }\r\n}\r\n\r\nexport function $mergeReturn(astList) {\r\n  const startIndex = astList.length - 1\r\n  if([AstType['ReturnStatement'], AstType['BreakStatement'], AstType['ContinueStatement']].includes(astList[startIndex].type)) return\r\n  \r\n  const returnStatement = astList[startIndex - 1]\r\n  const statement = astList[startIndex]\r\n  returnStatement.argument = statement\r\n\r\n  astList.pop()\r\n}\r\n\r\nexport function _function({ source, location }) {\r\n  return {\r\n    type: AstType['FunctionDeclaration'],\r\n    source,\r\n    location,\r\n    id: null,\r\n    params: [],\r\n    body: null,\r\n  }\r\n}\r\n\r\nexport function $mergeFunctionId(astList) {\r\n  const startIndex = astList.length - 2\r\n  const func = astList[startIndex]\r\n  const id = astList[startIndex + 1]\r\n  func.id = id\r\n\r\n  astList.pop()\r\n}\r\n\r\nexport function $mergeFunctionParam(astList) {\r\n  const startIndex = astList.length - 2\r\n  const func = astList[startIndex]\r\n  const id = astList[startIndex + 1]\r\n  func.params.push(id)\r\n\r\n  astList.pop()\r\n}\r\n\r\nexport function $mergeFunctionBody(astList) {\r\n  const startIndex = astList.length - 2\r\n  const func = astList[startIndex]\r\n  const body = astList[startIndex + 1]\r\n  func.body = body\r\n\r\n  astList.pop()\r\n}\r\n\r\nexport function _if({ source, location }) {\r\n  return {\r\n    type: AstType['IfStatement'],\r\n    source,\r\n    location,\r\n    test: null,\r\n    consequent: null,\r\n    alternate: null\r\n  }\r\n}\r\nexport const _elif = _if\r\n\r\nexport function $mergeIfTest(astList) {\r\n  const startIndex = astList.length - 2\r\n  const ifStatement = astList[startIndex]\r\n  const test = astList[startIndex + 1]\r\n  ifStatement.test = test\r\n  astList.splice(startIndex + 1, 1)\r\n}\r\n\r\nexport function $mergeIfConsequent(astList) {\r\n  const startIndex = astList.length - 2\r\n  const ifStatement = astList[startIndex]\r\n  const consequent = astList[startIndex + 1]\r\n  ifStatement.consequent = consequent\r\n  astList.splice(startIndex + 1, 1)\r\n}\r\n\r\nexport function $mergeAlternate(astList) {\r\n  const startIndex = astList.length - 2\r\n  const statement = astList[startIndex]\r\n  const alternate = astList[startIndex + 1]\r\n  let cur = statement\r\n  while (cur.alternate && cur.alternate.type === AstType['IfStatement']) {\r\n    cur = cur.alternate\r\n  }\r\n  cur.alternate = alternate\r\n  astList.splice(startIndex + 1, 1)\r\n}\r\n\r\nexport function _equal({ value, source, location }) {\r\n  return {\r\n    type: AstType['EqualExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _plus({ value, source, location }) {\r\n  return {\r\n    type: AstType['PlusExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _minus({ value, source, location }) {\r\n  return {\r\n    type: AstType['MinusExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _multiply({ value, source, location }) {\r\n  return {\r\n    type: AstType['MultiplyExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _divide({ value, source, location }) {\r\n  return {\r\n    type: AstType['DivideExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _surplus({ value, source, location }) {\r\n  return {\r\n    type: AstType['SurplusExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _congruent({ value, source, location }) {\r\n  return {\r\n    type: AstType['CongruentExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _not({ value, source, location }) {\r\n  return {\r\n    type: AstType['NotExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _and({ value, source, location }) {\r\n  return {\r\n    type: AstType['AndExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _or({ value, source, location }) {\r\n  return {\r\n    type: AstType['OrExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _greater({ value, source, location }) {\r\n  return {\r\n    type: AstType['GreaterExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _greaterEqual({ value, source, location }) {\r\n  return {\r\n    type: AstType['GreaterEqualExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _less({ value, source, location }) {\r\n  return {\r\n    type: AstType['LessExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\nexport function _lessEqual({ value, source, location }) {\r\n  return {\r\n    type: AstType['LessEqualExpression'],\r\n    source,\r\n    location,\r\n    operator: value,\r\n  }\r\n}\r\n\r\nexport function $mergeAssignment(astList) {\r\n  const centerIndex = astList.length - 2;\r\n  const operator = astList[centerIndex];\r\n  const left = astList[centerIndex - 1];\r\n  const right = astList[centerIndex + 1];\r\n  const ast = {\r\n    type: AstType['AssignmentExpression'],\r\n    ...mergeTokenInfo(left, operator, right),\r\n    left: left,\r\n    operator: operator.operator,\r\n    right: right\r\n  };\r\n  astList.splice(centerIndex - 1, 3, ast);\r\n}\r\n\r\nexport function $binaryExpression(astList) {\r\n  const centerIndex = astList.length - 2;\r\n  const operator = astList[centerIndex];\r\n  const left = astList[centerIndex - 1];\r\n  const right = astList[centerIndex + 1];\r\n  const ast = {\r\n    type: AstType['BinaryExpression'],\r\n    ...mergeTokenInfo(left, operator, right),\r\n    left: left,\r\n    operator: operator.operator,\r\n    right: right\r\n  };\r\n  astList.splice(centerIndex - 1, 3, ast);\r\n}\r\n\r\nexport function $logicalExpression(astList) {\r\n  const centerIndex = astList.length - 2;\r\n  const operator = astList[centerIndex];\r\n  const left = astList[centerIndex - 1];\r\n  const right = astList[centerIndex + 1];\r\n  const ast = {\r\n    type: AstType['LogicalExpression'],\r\n    ...mergeTokenInfo(left, operator, right),\r\n    left: left,\r\n    operator: operator.operator,\r\n    right: right\r\n  };\r\n  astList.splice(centerIndex - 1, 3, ast);\r\n}\r\n\r\nexport function $unaryExpression(astList) {\r\n  const startIndex = astList.length - 2;\r\n  const operator = astList[startIndex];\r\n  const right = astList[startIndex + 1];\r\n  const ast = {\r\n    type: AstType['UnaryExpression'],\r\n    ...mergeTokenInfo(operator, right),\r\n    operator: operator.operator,\r\n    argument: right\r\n  };\r\n  astList.splice(startIndex, 2, ast);\r\n}\r\n\r\nexport function $createCall(astList) {\r\n  const startIndex = astList.length - 1\r\n  const id = astList[startIndex]\r\n\r\n  const ast = {\r\n    type: AstType['CallExpression'],\r\n    ...mergeTokenInfo(id),\r\n    callee: id,\r\n    arguments: []\r\n  }\r\n  astList.splice(startIndex, 1, ast)\r\n}\r\n\r\nexport function $mergeCallParam(astList) {\r\n  const startIndex = astList.length - 2\r\n  const call = astList[startIndex]\r\n  const id = astList[startIndex + 1]\r\n  call.arguments.push(id)\r\n\r\n  astList.pop()\r\n}\r\n\r\nexport function $updateCallInfo(astList) {\r\n  const startIndex = astList.length - 1\r\n  const call = astList[startIndex]\r\n  const ast = {\r\n    ...call,\r\n    ...mergeTokenInfo(call.callee, ...call.arguments)\r\n  }\r\n  astList.splice(startIndex, 1, ast)\r\n}\r\n\r\nexport function $expressionStatement(astList) {\r\n  astList.push(createExpressionStatement(astList.pop()))\r\n}\r\n\r\nexport function _while({ source, location }) {\r\n  return {\r\n    type: AstType['WhileStatement'],\r\n    source,\r\n    location,\r\n    test: null,\r\n    body: null,\r\n    alternate: null\r\n  }\r\n}\r\n\r\nexport function $mergeWhileTest(astList) {\r\n  const startIndex = astList.length - 2\r\n  const whileStatement = astList[startIndex]\r\n  const test = astList[startIndex + 1]\r\n  whileStatement.test = test\r\n  astList.splice(startIndex + 1, 1)\r\n}\r\n\r\nexport function $mergeWhileBody(astList) {\r\n  const startIndex = astList.length - 2\r\n  const whileStatement = astList[startIndex]\r\n  const body = astList[startIndex + 1]\r\n  whileStatement.body = body\r\n  astList.splice(startIndex + 1, 1)\r\n}\r\n\r\nexport function _for({ source, location }) {\r\n  return {\r\n    type: AstType['ForStatement'],\r\n    source,\r\n    location,\r\n    init: null,\r\n    test: null,\r\n    update: null,\r\n    body: null,\r\n    alternate: null\r\n  }\r\n}\r\n\r\nexport function $mergeForInit(astList) {\r\n  const tail = astList.length - 1\r\n  if(astList[tail].type === AstType['ForStatement']) return\r\n\r\n  const forStatement = astList[tail - 1]\r\n  const init = astList[tail]\r\n\r\n  forStatement.init = init\r\n  astList.pop()\r\n}\r\n\r\nexport function $mergeForTest(astList) {\r\n  const tail = astList.length - 1\r\n  if(astList[tail].type === AstType['ForStatement']) return\r\n\r\n  const forStatement = astList[tail - 1]\r\n  const test = astList[tail]\r\n\r\n  forStatement.test = test\r\n  astList.pop()\r\n}\r\n\r\nexport function $mergeForUpdate(astList) {\r\n  const tail = astList.length - 1\r\n  if(astList[tail].type === AstType['ForStatement']) return\r\n\r\n  const forStatement = astList[tail - 1]\r\n  const update = astList[tail]\r\n\r\n  forStatement.update = update\r\n  astList.pop()\r\n}\r\n\r\nexport function $mergeForBody(astList) {\r\n  const startIndex = astList.length - 2\r\n  const forStatement = astList[startIndex]\r\n  const body = astList[startIndex + 1]\r\n  forStatement.body = body\r\n  astList.splice(startIndex + 1, 1)\r\n}\r\n\r\nexport function _leftBrace({ source, location }) {\r\n  return {\r\n    type: AstType['ArrayExpression'],\r\n    source,\r\n    location,\r\n    elements: []\r\n  }\r\n}\r\n\r\nexport function $mergeArray(astList) {\r\n  const startIndex = astList.length - 2\r\n  const array = astList[startIndex]\r\n  array.elements.push(astList.pop())\r\n}\r\n\r\nexport function $createMemberExpression(astList) {\r\n  astList.pop()\r\n  const id = astList.pop()\r\n\r\n  const ast = {\r\n    type: AstType['MemberExpression'],\r\n    ...mergeTokenInfo(id),\r\n    object: id,\r\n    property: null\r\n  }\r\n  astList.push(ast)\r\n}\r\n\r\nexport function $mergeMember(astList) {\r\n  const startIndex = astList.length - 2\r\n  const member = astList[startIndex]\r\n\r\n  member.property = astList.pop()\r\n}\r\n\r\n// utils\r\nfunction mergeTokenInfo(...asts) {\r\n  let prevSource = asts[0].source\r\n  const set = new Set()\r\n  set.add(prevSource)\r\n  for (let i = 1; i < asts.length; ++i) {\r\n    const curSource = asts[i].source\r\n    set.add(curSource)\r\n  }\r\n  return {\r\n    source: [...set].join(''),\r\n    location: {\r\n      ...asts[0].location,\r\n      end: asts[asts.length - 1].location.end\r\n    }\r\n  }\r\n}\r\n\r\nfunction createExpressionStatement(statement) {\r\n  return {\r\n    type: AstType['ExpressionStatement'],\r\n    source: statement.source,\r\n    location: statement.location,\r\n    expression: statement\r\n  }\r\n}\r\n","import { EMPTY_CHAIN, $ } from 'll1-grammar'\r\nimport Scanner from \"../Scanner\"\r\nimport { createRoot } from './constructor'\r\nimport error from '../error'\r\n\r\nexport default class Parser {\r\n  constructor(startSymbol, predictSet, constructor) {\r\n    this.startSymbol = startSymbol\r\n    this.predictSet = predictSet\r\n    this.constructor = constructor\r\n  }\r\n\r\n  parse(tokens) {\r\n    const blocks = []\r\n    const astList = []\r\n    const stack = []\r\n    blocks.push(astList)\r\n    stack.push(this.startSymbol)\r\n\r\n    const scanner = new Scanner(tokens)\r\n\r\n    let token\r\n    while (stack.length || !scanner.isEnd()) {\r\n      if (!stack.length) {\r\n        token = scanner.peek()\r\n        if (token.type !== $)\r\n          error(SyntaxError, `Unexpected token '${token.value}'`, token.source, token.location)\r\n        else\r\n          break\r\n      }\r\n\r\n      token = scanner.peek()\r\n      const terminalSymbol = token.type\r\n      // 抛出意外的终结符错误\r\n      if (!this.predictSet.has(terminalSymbol)) {\r\n        error(SyntaxError, `Unexpected token '${token.value}'`, token.source, token.location)\r\n      }\r\n\r\n      const expressionMap = this.predictSet.get(terminalSymbol)\r\n      const left = stack.pop()\r\n      if (left[0] === $) {\r\n        this.constructor[left]?.(blocks[blocks.length - 1], blocks)\r\n        continue\r\n      } else if (left === token.type) {\r\n        const child = this.constructor[`_${token.type}`]?.(token)\r\n        if (child) blocks[blocks.length - 1].push(child)\r\n        scanner.read()\r\n        continue\r\n      }\r\n      // 该终结符找不到对应产生式，说明文法不适用当前表达式，抛出语法错误\r\n      if (!expressionMap.has(left)) {\r\n        error(SyntaxError, `Unexpected token '${token.value}'`, token.source, token.location)\r\n      }\r\n\r\n      const right = expressionMap.get(left)\r\n      if (right[0] === EMPTY_CHAIN) continue\r\n      for (let i = right.length - 1; i >= 0; --i) {\r\n        if (right[i] === EMPTY_CHAIN) continue\r\n        else stack.push(right[i])\r\n      }\r\n    }\r\n\r\n    const location = {\r\n      linePos: 1,\r\n      line: 1,\r\n      start: 0,\r\n      end: astList.length ? astList[astList.length - 1].location.end : 0\r\n    }\r\n    return createRoot(astList, location)\r\n  }\r\n}\r\n","import { makeLL1 } from 'll1-grammar'\r\n\r\nconst grammars =\r\n[\r\n  `Sentence                   ->  SingleStatement Semicolon Sentence | null`,\r\n  `SingleStatement            ->  Defined | Block | Function | Condition | Circulation | Assignment`,\r\n  `Semicolon                  ->  SingleSemicolon Semicolon'`,\r\n  `Semicolon'                 ->  SingleSemicolon Semicolon' | null`,\r\n  `SingleSemicolon            ->  semicolon`,\r\n  // 表达式 id; 1; 1+1; 1>2; 1 and 2; 1 or 2; not 2; a+b; -1;\r\n  `BinaryExpression           ->  ArithmeticExpression1 BinaryExpression' $expressionStatement`,\r\n  `BinaryExpression'          ->  LogicalExpression BinaryExpression' | ComparisonExpression BinaryExpression' | null`,\r\n  `ArithmeticExpression1      ->  ArithmeticExpression2 ArithmeticExpression1'`,\r\n  `ArithmeticExpression1'     ->  Operator1 ArithmeticExpression2 $binaryExpression ArithmeticExpression1' | null`,\r\n  `ArithmeticExpression2      ->  UnaryExpression ArithmeticExpression2'`,\r\n  `ArithmeticExpression2'     ->  Operator2 ArithmeticExpression2 $binaryExpression | null`,\r\n  `UnaryExpression            ->  Operator1 Variable $unaryExpression | Variable | not Variable $unaryExpression`,\r\n  `Variable                   ->  identifier Variable' | literal | leftBracket BinaryExpression rightBracket | Array Variable'`,\r\n  `Variable'                  ->  ArrayMember Variable''' | CallFunc | null`,\r\n  `Variable''                 ->  ArrayMember | null`,\r\n  `Variable'''                ->  CallFunc | null`,\r\n  `LogicalExpression          ->  or ArithmeticExpression1 $logicalExpression | and ArithmeticExpression1 $logicalExpression | congruent ArithmeticExpression1 $binaryExpression`,\r\n  `ComparisonExpression       ->  greater ArithmeticExpression1 $binaryExpression |\r\n                                  greaterEqual ArithmeticExpression1 $binaryExpression | \r\n                                  less ArithmeticExpression1 $binaryExpression | \r\n                                  lessEqual ArithmeticExpression1 $binaryExpression`,\r\n  `Operator1                  ->  plus | minus`,\r\n  `Operator2                  ->  multiply | divide | surplus`,\r\n  // 声明 def id; def id = 1;\r\n  `Defined                    ->  defined identifier Defined'`,\r\n  `Defined'                   ->  equal Value $createVariableDeclaratorInit Defined'' | $createVariableDeclarator null`,\r\n  `Defined''                  ->  comma identifier Defined' | null`,\r\n  // 赋值\r\n  `Assignment                 ->  identifier Assignment'' Assignment'`,\r\n  `Assignment'                ->  equal Value $mergeAssignment $expressionStatement | CallFunc $expressionStatement | null`,\r\n  `Assignment''               ->  ArrayMember | null`,\r\n  `Call                       ->  $createCall leftBracket Call' rightBracket $updateCallInfo`,\r\n  `Call'                      ->  CallParams $mergeCallParam Call'' | null`,\r\n  `Call''                     ->  comma CallParams $mergeCallParam Call'' | null`,\r\n  `CallParams                 ->  BinaryExpression | Function`,\r\n  `CallFunc                   ->  Call CallFunc'`,\r\n  `CallFunc'                  ->  Call CallFunc' | null`,\r\n  `Value                      ->  BinaryExpression | Function | Condition | Circulation | Block`,\r\n  // 数组\r\n  `Array                      ->  leftBrace Array' rightBrace`,\r\n  `Array'                     ->  BinaryExpression $mergeArray Array'' | Function $mergeArray Array'' | null`,\r\n  `Array''                    ->  comma Array''' | null`,\r\n  `Array'''                   ->  BinaryExpression $mergeArray Array'' | Function $mergeArray Array''`,\r\n  `ArrayMember                ->  leftBrace $createMemberExpression BinaryExpression $mergeMember rightBrace ArrayMember'`,\r\n  `ArrayMember'               ->  ArrayMember | null`,\r\n  // 方法声明 func fn(): func fn(args1, args2);\r\n  `Function                   ->  function identifier $mergeFunctionId Params Colon SingleBlock $mergeFunctionBody`,\r\n  `Params                     ->  leftBracket Params' rightBracket`,\r\n  `Params'                    ->  identifier $mergeFunctionParam Params'' | null`,\r\n  `Params''                   ->  comma identifier $mergeFunctionParam Params'' | null`,\r\n  // 块级作用域 begin end; begin return end;\r\n  `Block                      ->  begin $appendBlock Sentence Block'`,\r\n  `Block'                     ->  end $popBlock | return Block'' | break Block'' | continue Block'''`,\r\n  `Block''                    ->  BinaryExpression $mergeReturn Block''' | Function $mergeReturn Block''' | Condition $mergeReturn Block''' | Block'''`,\r\n  `Block'''                   ->  Semicolon end $popBlock`,\r\n  // 条件语句 if(): elif(): else:\r\n  `Condition                  ->  If Elif`,\r\n  `If                         ->  if leftBracket BinaryExpression rightBracket $mergeIfTest Colon SingleBlock $mergeIfConsequent`,\r\n  `Elif                       ->  elif leftBracket BinaryExpression rightBracket $mergeIfTest Colon SingleBlock $mergeIfConsequent $mergeAlternate Elif |\r\n                                  Else | \r\n                                  null`,\r\n  `Else                       ->  else Colon SingleBlock $mergeAlternate`,\r\n  // 循环 for():\r\n  `Circulation                ->  For CirculationElse | While CirculationElse`,\r\n  `For                        ->  for leftBracket ForSentence' $mergeForInit SingleSemicolon ForSentence'' $mergeForTest SingleSemicolon ForSentence''' $mergeForUpdate rightBracket Colon SingleBlock  $mergeForBody`,\r\n  `ForSentence'               ->  Defined | Assignment | null`,\r\n  `ForSentence''              ->  BinaryExpression | null`,\r\n  `ForSentence'''             ->  Assignment | null`,\r\n  `While                      ->  while leftBracket BinaryExpression rightBracket $mergeWhileTest Colon SingleBlock $mergeWhileBody`,\r\n  `CirculationElse            ->  Else | null`,\r\n  // \r\n  `SingleBlock                ->  Block | BinaryExpression | Function | pass | break SingleBlock' $mergeReturn | continue`,\r\n  `SingleBlock'               ->  BinaryExpression | null`,\r\n  // 单终结符\r\n  `Colon                      ->  colon`,\r\n];\r\nconst terminalSymbols =\r\n  'defined|identifier|equal|congruent|semicolon|leftBracket|rightBracket|literal|plus|minus|multiply|divide|surplus|function|begin|end|return|comma|colon|if|elif|else|or|and|not|greater|greaterEqual|less|lessEqual|pass|for|while|break|continue|leftBrace|rightBrace'\r\n    .split('|');\r\n\r\nconst ll1 = makeLL1(grammars, terminalSymbols);\r\n\r\nexport const startSymbol = ll1.startSymbol\r\nexport const predictSet = ll1.predictSet\r\n","import Parser from './Parser'\r\nimport { startSymbol, predictSet } from './grammar'\r\nimport * as constructor from './constructor'\r\n\r\nexport default new Parser(startSymbol, predictSet, constructor)\r\nexport * from './astType'\r\n","export default class Scope {\r\n  constructor(parent) {\r\n    this.parent = parent\r\n    this.scope = new Map()\r\n  }\r\n\r\n  has(identifier) {\r\n    return this.scope.has(identifier)\r\n  }\r\n\r\n  get(identifier) {\r\n    let cur = this\r\n    while (cur && !cur.has(identifier)) {\r\n      cur = cur.parent\r\n    }\r\n\r\n    if (cur) {\r\n      return cur.scope.get(identifier)\r\n    }\r\n  }\r\n\r\n  set(identifier, value) {\r\n    const scope = this.get(identifier)\r\n\r\n    if (scope) scope.scope.set(identifier, value)\r\n    else this.scope.set(identifier, value)\r\n  }\r\n\r\n  setCur(identifier, value) {\r\n    this.scope.set(identifier, value)\r\n  }\r\n\r\n  clear() {\r\n    this.scope.clear()\r\n  }\r\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","\nexport const packageType = {\n  Literal: 'Literal',\n  Function: 'Function',\n  SystemFunction: 'SystemFunction',\n  Array: 'Array'\n};\n\nclass System {\n  __system__ = true;\n}\n\nexport class Literal extends System {\n  __type__ = packageType['Literal'];\n  constructor(isRead, value) {\n    super();\n    this.isRead = isRead;\n    this.value = value;\n  }\n}\n\nexport class ArrayLiteral extends System {\n  __type__ = packageType['Array'];\n  constructor(array) {\n    super();\n    this.array = array;\n  }\n\n  append = new SystemFunction('append', (args) => {\n    this.array.push(...args)\n    return this\n  })\n\n  pop = new SystemFunction('pop', () => {\n    return this.array.pop()\n  })\n\n  reverse = new SystemFunction('reverse', () => {\n    this.array.reverse()\n    return this\n  })\n\n  copy = new SystemFunction('copy', () => {\n    return new ArrayLiteral([...this.array])\n  })\n}\n\nexport class Function extends System {\n  __type__ = packageType['Function'];\n  constructor(name, params, body, scope) {\n    super();\n    this.name = name;\n    this.params = params.map(param => param.name);\n    this.length = params.length;\n    this.body = body;\n    this.scope = scope;\n  }\n}\n\nexport class SystemFunction extends System {\n  __type__ = packageType['SystemFunction'];\n  constructor(name, fn) {\n    super();\n    this.name = name;\n    this.fn = fn;\n  }\n}\n\nexport function getValue(pack) {\n  if (Array.isArray(pack)) {\n    const [array, index] = pack\n    return array.array[index]\n  }\n  if (!pack?.__type__) return pack;\n  if (pack.__type__ === packageType['Literal']) {\n    if (pack.value?.__type__ === packageType['Function']) {\n      return pack.value;\n    } else {\n      return pack.value;\n    }\n  } else if (pack.__type__ === packageType['Function']) {\n    return pack;\n  }\n}\n\nexport function toString(pack) {\n  if (Array.isArray(pack)) {\n    const [array, index] = pack\n    return toString(array.array[index])\n  }\n  if (!pack?.__type__) return basicType(pack);\n  switch (pack.__type__) {\n    case packageType['Literal']: return toString(pack.value);\n    case packageType['Function']: return `\\x1b[36;2m${`<Function ${pack.name}>`}\\x1b[0m`;\n    case packageType['SystemFunction']: return `\\x1b[36;2m${`<SystemFunction ${pack.name}>`}\\x1b[0m`;\n    case packageType['Array']: return `{${pack.array.map(item => ' ' + toString(item))} }`;\n    default: return basicType(pack.value);\n  }\n\n  function basicType(value) {\n    switch (value) {\n      case true: return `\\x1b[32;2mTrue\\x1b[0m`;\n      case false: return `\\x1b[31;2mFalse\\x1b[0m`;\n      case null: return `\\x1b[30;2mnull\\x1b[0m`;\n      case undefined: return `\\x1b[30;2mnull\\x1b[0m`;\n      default:\n        if (typeof value === 'number') return `\\x1b[33;2m${value}\\x1b[0m`;\n        return value;\n    }\n  }\n}\n\nexport function getType(pack) {\n  if (!pack?.__type__) return basicType(pack);\n  switch (pack.__type__) {\n    case packageType['Literal']: return getType(pack.value);\n    case packageType['Function']:\n    case packageType['SystemFunction']: return `<class function>`;\n    case packageType['Array']: return `<class array>`;\n    default: return basicType(pack.value);\n  }\n\n  function basicType(value) {\n    switch (value) {\n      case true: return `<class boolean>`;\n      case false: return `<class boolean>`;\n      case null: return `<class null>`;\n      case undefined: return `<class null>`;\n      default:\n        if (typeof value === 'number') return `<class number>`;\n        if (typeof value === 'string') return `<class string>`;\n    }\n  }\n}\n","import lexer from '../lexer';\nimport parser, { AstType } from '../parser';\nimport Scope from './Scope';\nimport { packageType, Literal, ArrayLiteral, Function, SystemFunction, getValue, toString, getType } from './package';\nimport error from '../error';\n\nexport default class Compiler {\n  constructor() {\n    this.lexer = lexer;\n    this.parser = parser;\n    this.AstType = AstType;\n  }\n\n  getGlobalScope() {\n    const globalScope = new Scope();\n\n    globalScope.set('print', new SystemFunction('print', (args, node) => {\n      console.log(...args.map(arg => toString(arg)));\n    }));\n    globalScope.set('type', new SystemFunction('type', (args, node) => {\n      const value = unlock(args[0]);\n      return `\\x1b[35;2m${getType(value)}\\x1b[0m`;\n    }));\n    globalScope.set('eval', new SystemFunction('eval', (args, node) => {\n      const code = args[0];\n      if (getType(code) !== '<class string>')\n        error(TypeError, `<eval>: param is not string`, node.source, node.location);\n      return this.compile(code);\n    }));\n    globalScope.set('timer', new SystemFunction('timer', (args, node) => {\n      const fn = args[0];\n      const time = args[1];\n      if (getType(fn) !== '<class function>')\n        error(TypeError, `<timer>: param is not function`, node.source, node.location);\n      if (getType(time) !== '<class number>')\n        error(TypeError, `<timer>: param is not number`, node.source, node.location);\n\n      let sum = 0;\n      const timer = setInterval(() => {\n        const [stop, count] = fn.params;\n        if (stop) {\n          fn.scope.set(stop, new SystemFunction('stop', () => {\n            clearInterval(timer);\n          }));\n        }\n        if (count) {\n          fn.scope.set(count, new Literal(false, ++sum));\n        }\n        this.handle(fn.body, fn.scope, fn.scope);\n        fn.scope.clear();\n      }, getValue(time));\n    }));\n    globalScope.set('len', new SystemFunction('len', (args, node) => {\n      let array = args[0];\n      if (array.__type__ === packageType['Literal']) array = array.value;\n      if (array?.__type__ === packageType['Array']) return array.array.length;\n      error(TypeError, `<len>: param is not array`, node.arguments[0].source, node.arguments[0].location);\n    }));\n\n    return globalScope;\n  }\n\n  compile(sentence) {\n    const tokens = this.lexer.tokenize(sentence);\n    const ast = this.parser.parse(tokens);\n\n    return this.handle(ast, null, this.getGlobalScope());\n  }\n\n  handle(root, gist, scope) {\n    switch (root.type) {\n      case AstType['Program']: {\n        const { body } = root;\n        for (let i = 0; i < body.length; ++i) {\n          const node = body[i];\n          this.handle(node, null, scope);\n        }\n      }\n        break;\n      case AstType['BlockStatement']: {\n        const { body } = root;\n\n        scope = gist?.constructor === Scope ? gist : new Scope(scope);\n\n        for (let i = 0; i < body.length; ++i) {\n          const node = body[i];\n          const type = node.type;\n          if (type === AstType['ReturnStatement']) {\n            if (gist?.constructor === Scope) {\n              return unlock(this.handle(node, null, scope));\n            } else {\n              return this.handle(node, null, scope);\n            }\n          } else if (type === AstType['BreakStatement']) {\n            return this.handle(node, null, scope);\n          } else if (type === AstType['ContinueStatement']) {\n            return this.handle(node, null, scope);\n          }\n          const curRes = this.handle(node, null, scope);\n          if (Array.isArray(curRes)) {\n            if (['return', 'break', 'continue'].includes(curRes[1])) {\n              if (gist?.constructor === Scope) {\n                return curRes[0];\n              } else {\n                return curRes;\n              }\n            }\n          }\n        }\n      }\n        break;\n      case AstType['VariableDeclaration']: {\n        const { declarations, kind } = root;\n        declarations.forEach(declaration => this.handle(declaration, kind, scope));\n      }\n        break;\n      case AstType['VariableDeclarator']: {\n        const { id, init } = root;\n        const { name } = id;\n        if (!scope.has(name)) {\n          if (gist === 'def') { // def\n            let result;\n            if (init) {\n              result = unlock(this.handle(init, null, scope));\n              result = result?.__type__ === packageType['Literal'] ? result.value : result;\n            } else {\n              result = null;\n            }\n            scope.setCur(name, new Literal(false, result));\n          } else { // read\n            if (init) {\n              let result = unlock(this.handle(init, null, scope));\n              result = result?.__type__ === packageType['Literal'] ? result.value : result;\n              scope.setCur(name, new Literal(true, result));\n            } else {\n              error(SyntaxError, `Missing initializer in read declaration`, root.source, root.location);\n            }\n          }\n        } else { // 已存在着该变量\n          error(SyntaxError, `Identifier '${id.name}' has already been declared`, id.source, id.location);\n        }\n      }\n        break;\n      case AstType['Identifier']: {\n        const result = scope.get(root.name);\n        if (result) {\n          return result;\n        } else {\n          error(ReferenceError, `'${root.name}' is not defined`, root.source, root.location);\n        }\n      }\n      case AstType['Literal']: {\n        return root.value;\n      }\n      case AstType['ExpressionStatement']: {\n        const { expression } = root;\n        return this.handle(expression, null, scope);\n      }\n      case AstType['BinaryExpression']: {\n        const { left, operator, right } = root;\n        switch (operator) {\n          case '+': return unlock(getValue(this.handle(left, null, scope))) + unlock(getValue(this.handle(right, null, scope)));\n          case '-': return unlock(getValue(this.handle(left, null, scope))) - unlock(getValue(this.handle(right, null, scope)));\n          case '*': return unlock(getValue(this.handle(left, null, scope))) * unlock(getValue(this.handle(right, null, scope)));\n          case '/': return unlock(getValue(this.handle(left, null, scope))) / unlock(getValue(this.handle(right, null, scope)));\n          case '%': return unlock(getValue(this.handle(left, null, scope))) % unlock(getValue(this.handle(right, null, scope)));\n          case '>': return unlock(getValue(this.handle(left, null, scope))) > unlock(getValue(this.handle(right, null, scope)));\n          case '>=': return unlock(getValue(this.handle(left, null, scope))) >= unlock(getValue(this.handle(right, null, scope)));\n          case '<': return unlock(getValue(this.handle(left, null, scope))) < unlock(getValue(this.handle(right, null, scope)));\n          case '<=': return unlock(getValue(this.handle(left, null, scope))) <= unlock(getValue(this.handle(right, null, scope)));\n          case '==': return unlock(getValue(this.handle(left, null, scope))) === unlock(getValue(this.handle(right, null, scope)));\n        }\n      }\n      case AstType['LogicalExpression']: {\n        const { left, operator, right } = root;\n        switch (operator) {\n          case 'and': return unlock(getValue(this.handle(left, null, scope))) && unlock(getValue(this.handle(right, null, scope)));\n          case 'or': return unlock(getValue(this.handle(left, null, scope))) || unlock(getValue(this.handle(right, null, scope)));\n        }\n      }\n      case AstType['UnaryExpression']: {\n        const { operator, argument } = root;\n        switch (operator) {\n          case '+': return + unlock(getValue(this.handle(argument, null, scope)));\n          case '-': return - unlock(getValue(this.handle(argument, null, scope)));\n          case 'not': return !unlock(getValue(this.handle(argument, null, scope)));\n        }\n      }\n      case AstType['AssignmentExpression']: {\n        const { left, right } = root;\n        if (left.type === AstType['Identifier']) {\n          const result = scope.get(left.name);\n          if (result) {\n            if (result.__type__ === packageType['Function']) {\n              error(TypeError, `Function is not variable`, root.source, root.location);\n            }\n            if (result.__type__ === packageType['Literal']) {\n              if (!result.isRead) {\n                let thisRes = unlock(this.handle(right, null, scope));\n                thisRes = thisRes?.__type__ === packageType['Literal'] ? thisRes.value : thisRes;\n                result.value = thisRes;\n              } else {\n                error(TypeError, `Assignment to constant variable`, root.source, root.location);\n              }\n            }\n          } else {\n            error(SyntaxError, `Identifier '${left.name}' is not declared`, left.source, left.location);\n          }\n        } else {\n          const [array, index] = this.handle(left, null, scope);\n          let thisRes = unlock(this.handle(right, null, scope));\n          thisRes = thisRes?.__type__ === packageType['Literal'] ? thisRes.value : thisRes;\n          array.array[index] = thisRes\n        }\n      }\n        break;\n      case AstType['FunctionDeclaration']: {\n        const { id, params, body } = root;\n        const { name } = id;\n        const set = new Set();\n        params.some(param => { // 检查是否有重复的参数名\n          if (!set.has(param.name)) {\n            set.add(param.name);\n          } else {\n            error(SyntaxError, `Identifier not repeatable params: ${param.name}`, param.source, param.location);\n          }\n        });\n        if (!scope.has(name)) {\n          scope.set(name, new Function(name, params, body, new Scope(scope)));\n          return scope.get(name);\n        } else {\n          error(SyntaxError, `Identifier '${name}' has already been declared`, id.source, id.location);\n        }\n      }\n        break;\n      case AstType['CallExpression']: {\n        const { callee, arguments: args } = root;\n        let func = unlock(this.handle(callee, null, scope));\n        if (func?.__type__ === packageType['SystemFunction']) {\n          return func.fn.apply(null, [args.map(arg => this.handle(arg, null, scope)), root, scope]);\n        } else {\n          if (func?.__type__ === packageType['Literal']) {\n            func = func.value;\n          }\n\n          if (![packageType['Function'], packageType['SystemFunction']].includes(func?.__type__)) {\n            let identifier = callee;\n            let isChained = false;\n            while (identifier.type === AstType['CallExpression']) {\n              identifier = identifier.callee;\n              isChained = true;\n            }\n            error(TypeError, `${identifier.name + (isChained && '(...)')} is not a function`, identifier.source, identifier.location);\n          }\n\n          if (func.__type__ === packageType['SystemFunction']) {\n            return func.fn.apply(null, [args.map(arg => this.handle(arg, null, scope)), root, scope]);\n          }\n\n          func.params.forEach((param, i) => {\n            if (args[i] == null) {\n              func.scope.setCur(param, new Literal(false, null));\n            } else {\n              const result = this.handle(args[i], null, scope);\n              let arg;\n              if (result.__type__) {\n                switch (result.__type__) {\n                  case packageType['Literal']:\n                    arg = new Literal(false, result.value);\n                    break;\n                  default:\n                    arg = result;\n                }\n              } else {\n                arg = new Literal(false, result);\n              }\n              func.scope.setCur(param, arg);\n            }\n          });\n\n          const fnReturn = this.handle(func.body, func.scope, func.scope);\n          func.scope.clear();\n          return unlock(fnReturn);\n        }\n      }\n      case AstType['ReturnStatement']: {\n        const { argument } = root;\n        return [argument ? unlock(this.handle(argument, null, scope)) : null, 'return'];\n      }\n      case AstType['BreakStatement']: {\n        const { argument } = root;\n        return [argument ? unlock(this.handle(argument, null, scope)) : null, 'break'];\n      }\n      case AstType['ContinueStatement']: {\n        const { argument } = root;\n        return [argument ? unlock(this.handle(argument, null, scope)) : null, 'continue'];\n      }\n      case AstType['IfStatement']: {\n        const test = getValue(this.handle(root.test, null, scope));\n        if (test) return this.handle(root['consequent'], null, scope);\n        else if (root['alternate']) return this.handle(root['alternate'], null, scope);\n        return null;\n      }\n      case AstType['WhileStatement']: {\n        while (getValue(this.handle(root.test, null, scope))) {\n          const thisRes = this.handle(root['body'], null, scope);\n          if (Array.isArray(thisRes)) {\n            if (thisRes[1] === 'break') return thisRes[0];\n            else if (thisRes[1] === 'return') return thisRes;\n            else if (thisRes[1] === 'continue') continue;\n          }\n        }\n        if (root['alternate']) return this.handle(root['alternate'], null, scope);\n      }\n        break;\n      case AstType['ForStatement']: {\n        const { init, test, update, body, alternate } = root;\n        const newScope = new Scope(scope);\n        init && this.handle(init, null, newScope);\n        while (!test || getValue(this.handle(test, null, newScope))) {\n          const thisRes = this.handle(body, null, newScope);\n          update && this.handle(update, null, newScope);\n          if (Array.isArray(thisRes)) {\n            if (thisRes[1] === 'break') return thisRes[0];\n            else if (thisRes[1] === 'return') return thisRes;\n            else if (thisRes[1] === 'continue') continue;\n          }\n        }\n        if (alternate) return this.handle(alternate, null, scope);\n      }\n        break;\n      case AstType['ArrayExpression']: {\n        const { elements } = root;\n        return new ArrayLiteral(elements.map(elm => this.handle(elm, null, scope)));\n      }\n      case AstType['MemberExpression']: {\n        const { object, property } = root;\n        let array = this.handle(object, null, scope);\n        let index = this.handle(property, null, scope);\n        if (array.__type__ === packageType['Literal']) array = array.value;\n        if (array?.__type__ !== packageType['Array']) {\n          if (object.name) {\n            error(TypeError, `${object.name} is not array`, object.source, object.location);\n          } else {\n            error(TypeError, `Cannot read properties of ${toString(array)} (reading '${toString(index)}')`, property.source, property.location);\n          }\n        }\n        if (index.__type__ === packageType['Literal']) index = index.value;\n        const indexType = getType(index)\n        const key = toString(index)\n        if(indexType === `<class string>`) {\n          const arrayFunc = array[key]\n          if(!arrayFunc) {\n            error(TypeError, `${key} is not function`, property.source, property.location)\n          }\n          return arrayFunc\n        } else if (indexType !== `<class number>`) {\n          error(TypeError, `${key} is not number`, property.source, property.location);\n        }\n        return [array, index];\n      }\n    }\n  }\n}\n\nfunction unlock(result) {\n  if (Array.isArray(result)) {\n    if(['return', 'break'].includes(result[1])) return result[0];\n    else {\n      const [array, index] = result\n      return array.array[index]\n    }\n  } else {\n    return result;\n  }\n}","import Compiler from \"./Compiler\";\r\n\r\nexport default Compiler","import Compiler from \"./compiler\";\n\nexport default Compiler"],"names":["Scanner","stream","pos","length","isEnd","error","Error","err","source","loc","space","repeat","errLength","end","start","posSymbol","slice","linePos","line","chars","number","symbol","blank","Initialize","Else","Token","type","value","location","Lexel","table","sentence","lineSentence","split","tokens","scanner","char","fragment","state","initPos","curLine","curLinePos","startLine","startLinePos","read","indexOf","states","isMatch","matcher","match","SyntaxError","isTerminate","push","back","tokenString","forEach","tabel","AstType","createRoot","body","_defined","declarations","kind","_identifier","name","_literal","result","Number","raw","$createVariableDeclaratorInit","astList","startIndex","identifier","init","variableDeclarator","mergeTokenInfo","id","splice","pop","$createVariableDeclarator","_begin","_pass","$appendBlock","blocks","block","$popBlock","_","_return","argument","_break","_continue","$mergeReturn","includes","returnStatement","statement","_function","params","$mergeFunctionId","func","$mergeFunctionParam","$mergeFunctionBody","_if","test","consequent","alternate","_elif","$mergeIfTest","ifStatement","$mergeIfConsequent","$mergeAlternate","cur","_equal","operator","_plus","_minus","_multiply","_divide","_surplus","_congruent","_not","_and","_or","_greater","_greaterEqual","_less","_lessEqual","$mergeAssignment","centerIndex","left","right","ast","$binaryExpression","$logicalExpression","$unaryExpression","$createCall","callee","arguments","$mergeCallParam","call","$updateCallInfo","$expressionStatement","createExpressionStatement","_while","$mergeWhileTest","whileStatement","$mergeWhileBody","_for","update","$mergeForInit","tail","forStatement","$mergeForTest","$mergeForUpdate","$mergeForBody","_leftBrace","elements","$mergeArray","array","$createMemberExpression","object","property","$mergeMember","member","asts","prevSource","set","Set","add","i","curSource","join","expression","EMPTY_CHAIN","$","Parser","startSymbol","predictSet","constructor","stack","token","peek","terminalSymbol","has","expressionMap","get","child","makeLL1","grammars","terminalSymbols","ll1","Scope","parent","scope","Map","clear","packageType","Literal","Function","SystemFunction","Array","System","isRead","ArrayLiteral","args","reverse","map","param","fn","getValue","pack","isArray","index","__type__","toString","basicType","item","undefined","getType","lexer","parser","Compiler","globalScope","node","console","log","arg","unlock","code","TypeError","compile","time","sum","timer","setInterval","stop","count","clearInterval","handle","tokenize","parse","getGlobalScope","root","gist","curRes","declaration","setCur","ReferenceError","thisRes","some","apply","isChained","fnReturn","newScope","elm","indexType","key","arrayFunc"],"sourceRoot":""}